package routes

import (
	"{{project_name}}/api/controllers"
	"{{project_name}}/api/middlewares"
	"{{project_name}}/infrastructure"
)

// {{uc_resource}}Routes struct
type {{uc_resource}}Routes struct {
	logger                    config.Logger
	router                    router.Router
	{{lc_resource}}Controller controllers.{{uc_resource}}Controller
	middleware                middlewares.FirebaseAuthMiddleware
}

// New{{uc_resource}}Routes creates new {{uc_resource}} controller
func New{{uc_resource}}Routes(
	logger config.Logger,
	router router.Router,
	{{lc_resource}}Controller controllers.{{uc_resource}}Controller,
	middleware middlewares.FirebaseAuthMiddleware,
) {{uc_resource}}Routes {
	return {{uc_resource}}Routes{
		router:                    router,
		logger:                    logger,
		{{lc_resource}}Controller: {{lc_resource}}Controller,
		middleware:                middleware,
	}
}

// Setup {{lc_resource}} routes
func (c {{uc_resource}}Routes) Setup() {
	c.logger.Info(" Setting up {{uc_resource}} routes")
	{{lc_resource}} := c.router.Group("/{{route_name}}")
	{
		{{lc_resource}}.POST("", c.{{lc_resource}}Controller.Create{{uc_resource}})
		{{lc_resource}}.GET("", c.{{lc_resource}}Controller.GetAll{{uc_resource}})
		{{lc_resource}}.GET("/:id", c.{{lc_resource}}Controller.GetOne{{uc_resource}})
		{{lc_resource}}.PUT("/:id", c.{{lc_resource}}Controller.UpdateOne{{uc_resource}})
		{{lc_resource}}.DELETE("/:id", c.{{lc_resource}}Controller.DeleteOne{{uc_resource}})
	}
}
