package routes

import (
	"{{projectname}}/app/global/controllers"
	"{{projectname}}/app/global/middlewares"
	"{{projectname}}/app/global/infrastructure"
)

// {{ucresource}}Routes -> struct
type {{ucresource}}Routes struct {
	logger                    infrastructure.Logger
	router                    infrastructure.Router
	{{lcresource}}Controller controllers.{{ucresource}}Controller
	middleware                middlewares.FirebaseAuthMiddleware
}

// New{{ucresource}}Routes -> creates new {{ucresource}} controller
func New{{ucresource}}Routes(
	logger infrastructure.Logger,
	router infrastructure.Router,
	{{lcresource}}Controller controllers.{{ucresource}}Controller,
	middleware middlewares.FirebaseAuthMiddleware,
) {{ucresource}}Routes {
	return {{ucresource}}Routes{
		router:                    router,
		logger:                    logger,
		{{lcresource}}Controller: {{lcresource}}Controller,
		middleware:                middleware,
	}
}

// Setup {{lcresource}} routes
func (c {{ucresource}}Routes) Setup() {
	c.logger.Zap.Info(" Setting up {{ucresource}} routes")
	{{lcresource}} := c.router.Gin.Group("/{{pluralresourcetable}}")
	{
		{{lcresource}}.POST("", c.{{lcresource}}Controller.Create{{ucresource}})
		{{lcresource}}.GET("", c.{{lcresource}}Controller.GetAll{{ucresource}})
		{{lcresource}}.GET("/:id", c.{{lcresource}}Controller.GetOne{{ucresource}})
		{{lcresource}}.PUT("/:id", c.{{lcresource}}Controller.UpdateOne{{ucresource}})
		{{lcresource}}.DELETE("/:id", c.{{lcresource}}Controller.DeleteOne{{ucresource}})
	}
}
